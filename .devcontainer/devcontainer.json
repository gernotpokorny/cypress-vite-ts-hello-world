// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-dockerfile
{
	"name": "Existing Dockerfile",
	"build": {
		// Sets the run context to one level up instead of the .devcontainer folder.
		"context": "..",
		// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
		"dockerfile": "../Dockerfile",
		"target": "development"
	},
	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [
		5173
	],
	// Uncomment the next line to run commands after the container is created.
	// "postCreateCommand": "cat /etc/os-release",
	// Configure tool-specific properties.
	// "customizations": {},
	// Uncomment to connect as an existing user other than the container default. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "devcontainer"
	"customizations": {
		"vscode": {
			"extensions": [
				"ms-azuretools.vscode-docker",
				"dbaeumer.vscode-eslint",
				"jbockle.jbockle-format-files",
				"vincaslt.highlight-matching-tag",
				"oderwat.indent-rainbow",
				"bradlc.vscode-tailwindcss",
				"esbenp.prettier-vscode",
				"redhat.vscode-yaml",
				"mhutchie.git-graph",
				"eamodio.gitlens",
				"vitest.explorer"
			]
		}
	},
	"mounts": [
		{
			"source": "gpg_files",
			"target": "/mnt/gpg_files",
			"type": "volume"
		},
		{
			"source": "ca_certificates",
			"target": "/mnt/ca_certificates",
			"type": "volume"
		}
	],
	// Uncomment to connect as an existing user other than the container default. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "devcontainer"
	"postStartCommand": "git config --global core.autocrlf input && pnpm install && ([ -f /mnt/gpg_files/encrypted_secreet_gpg_key.asc ] && cp /mnt/gpg_files/encrypted_secreet_gpg_key.asc /root && echo \"pinentry-program /usr/bin/pinentry-x11\" >> ~/.gnupg/gpg-agent.conf && gpgconf --kill gpg-agent && rm -f ~/.gnupg/S.gpg-agent* && gpg-connect-agent reloadagent /bye && gpg --import /root/encrypted_secreet_gpg_key.asc || true) && ([ -f /mnt/ca_certificates/rootCA.crt ] && sudo cp /mnt/ca_certificates/rootCA.crt /usr/local/share/ca-certificates && sudo update-ca-certificates || true) && pnpm outdated || true"
}